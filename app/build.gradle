apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def  keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion compileSdk
    buildToolsVersion buildTools
    defaultConfig {
        applicationId "stressi.wirbleibenalle.org.stressfaktor"
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode 1
        versionName "0.1.11"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable = false
            shrinkResources false
        }
        debug {
            minifyEnabled false
            applicationIdSuffix ".d"
            versionNameSuffix "-debug"
        }
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                if (variant.buildType.name.equals("release")) {
                    outputFileName = "${variant.name}-${variant.versionName}.apk"
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$supportLibrary"
    implementation "com.android.support:design:$supportLibrary"
    implementation "com.android.support:recyclerview-v7:$supportLibrary"
    implementation "com.android.support:support-v4:$supportLibrary"


    implementation "com.google.code.gson:gson:$gson"

    implementation "net.danlew:android.joda:$joda"

    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"

    //leakcanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary"


    implementation "io.reactivex.rxjava2:rxjava:$rxjava2"

    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"

    // Butterknife
    implementation "com.jakewharton:butterknife:$butterknife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife"

    implementation "com.google.dagger:dagger:$dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger"

    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "javax.annotation:javax.annotation-api:$annotation"
    //parse html in to models
    implementation "pl.droidsonroids.retrofit2:converter-jspoon:$jspoon"

    implementation "com.google.guava:guava:$guava"
    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycle"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycle"
    //timber log
    implementation "com.jakewharton.timber:timber:$timber"

    testImplementation "junit:junit:$junit"

    testImplementation "org.mockito:mockito-core:$mockito"
    androidTestImplementation "org.mockito:mockito-core:$mockito"

    // PowerMock
    testImplementation "org.powermock:powermock-classloading-xstream:$powerMockito"
    testImplementation "org.powermock:powermock-module-junit4:$powerMockito"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powerMockito"
    testImplementation 'org.powermock:powermock-api-mockito2:1.7.0RC2'
    testImplementation "org.powermock:powermock-core:$powerMockito"
    //AssertJ
    testImplementation "com.squareup.assertj:assertj-android:$assertj"
    androidTestImplementation "com.squareup.assertj:assertj-android:$assertj"
}
